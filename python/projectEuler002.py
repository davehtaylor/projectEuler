# Even Fibonacci Numbers
#
# Each new term in the Fibonacci sequence is generated by adding the
# previous two terms. By starting with 1 and 2, the first 10 terms 
# will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do
# not exceed four million, find the sum of the even-valued terms.

# Initialize a variable, fib, for the while loop that creates the
# Fibonacci sequence. Initialize a list, fibonacci, to hold the 
# Fibonacci sequence. Initalized with first two digits to get it 
# started. Initialize a list, evens,  that holds only the even 
# numbers of the Fibonacci sequence

fib = 0
fibonacci = [1,2]
evens = []

# Create the Fibonacci sequence and add it to the fibonacci[] list

while fib < 4000000:
    fib = fibonacci[-1] + fibonacci[-2]
    fibonacci.append(fib)

# Find only the even numbers in fibonacci[] list and add them
# to the evens[] list

for i in fibonacci:
    if i%2 == 0:
        evens.append(i)

# Print the sum of the elemens of the evens[] list

print sum(evens)
